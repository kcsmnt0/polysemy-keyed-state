name: polysemy-keyed-state
version: 0.1
category: "BSD3, Library"
synopsis: Effect for a set of stateful values indexed by a type of keys
maintainer: Katie Casamento <kcsmnt0@gmail.com>
github: kcsmnt0/polysemy-keyed-state
license-file: LICENSE
stability: experimental

description: >
  The @KeyedState k@ effect provides access to a set of stateful values indexed by some key type @k :: Type -> Type@, where a key of type @k a@ can be used to access a stateful value of type @a@.

extra-source-files:
  - README.md
  - CHANGELOG.md

tested-with:
  - GHC == 8.6.5
  - GHC == 8.8.4
  - GHC == 8.10.5

library:
  source-dirs:
    - src
  exposed-modules:
    - Polysemy.State.Keyed
    - Polysemy.State.Keyed.Law

dependencies:
  - base >= 4.12 && < 4.15
  - constraints >= 0.11 && < 0.14
  - constraints-extras >= 0.3.0.2 && < 0.4
  - polysemy >= 1.3 && < 1.6
  - some >= 1.0.1 && < 1.1
  - StateVar >= 1.2 && < 1.3
  - trivial-constraint >= 0.3 && < 0.8

ghc-options:
  - -Wall
  - -Wincomplete-patterns
  - -Wincomplete-record-updates
  - -Wincomplete-uni-patterns
  - -Wredundant-constraints
  - -Wpartial-fields

default-extensions:
  - AllowAmbiguousTypes
  - ConstraintKinds
  - DataKinds
  - FlexibleContexts
  - FlexibleInstances
  - GADTs
  - LambdaCase
  - MultiParamTypeClasses
  - QuantifiedConstraints
  - RankNTypes
  - ScopedTypeVariables
  - TemplateHaskell
  - TupleSections
  - TypeApplications
  - TypeFamilies
  - TypeOperators
  - UndecidableInstances

tests:
  spec:
    main: "Spec.hs"
    ghc-options: "-threaded"
    source-dirs: [src, test]

    dependencies:
      - hspec >= 2.4.7 && < 2.9
      - QuickCheck >= 2.11.3 && < 2.15

    default-extensions:
      - StandaloneDeriving
